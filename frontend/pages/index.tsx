import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import dynamic from "next/dynamic";

import Nav from "../components/nav";
import SafeHydrate from "../components/safehydrate";
import { useAppContext } from "../components/context";
import { useEffect, useState } from "react";
import constants from "../constants";
import { utils } from "ethers";
import useDebounce from "../hooks/useDebounce";

const Graph = dynamic(() => import("../components/graph"), { ssr: false });

const Home: NextPage = () => {
  const context = useAppContext();
  const [address, setAddress] = useState<string>("");
  const [recommended, setRecommended] = useState<Array<any>>([]);
  const [hot, setHot] = useState<Array<any>>([]);

  const debouncedAddress = useDebounce(address, 1000);

  useEffect(() => {
    setAddress(context.address ?? "");
  }, []);

  useEffect(() => {
    // Get hot contracts
    const f = async () => {
      const res = await fetch(`${constants.serverUri}/hot`);
      const json = await res.json();
      const { results } = json;
      setHot(results);
    };

    f();
  }, []);

  useEffect(() => {
    const f = async () => {
      if (!utils.isAddress(address)) return;

      const res = await fetch(
        "http://localhost:3001/recommend?address=" + address
      );
      const json = await res.json();
      const results = json.results ?? [];
      console.log(results);
      setRecommended(results);
    };
    f();
  }, [debouncedAddress]);

  return (
    <div className={styles.container}>
      <Nav />
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <div>
          <h1 className="text-center">Transaction Graph</h1>
          <div className="mt-1">
            <div className="mb-2">
              <input
                type="text"
                name="name"
                id="name"
                className="h-16 ring-offset-2 ring-2 block w-full sm:text-sm p-4"
                placeholder="Contract Address"
                value={address}
                onChange={(e) => setAddress(e.target.value)}
              />
            </div>
          </div>
          <SafeHydrate>
            <Graph user={address} />
          </SafeHydrate>
          <div className="text-center mt-6">
            {hot.length > 0 && <h1 className="text-center">Hot Contracts</h1>}
            {hot.map &&
              hot.map((a) => {
                return (
                  <div>
                    <a href={`https://etherscan.io/address/${a.addr}`}>
                      {a.addr}
                    </a>
                  </div>
                );
              })}
          </div>
          <div className="text-center mt-6">
            {recommended.length > 0 && (
              <h1 className="text-center">Your Recommendations</h1>
            )}
            {recommended.map &&
              recommended.map((a) => (
                <div>
                  <a href={`https://etherscan.io/address/${a.addr}`}>
                    {a.name}
                  </a>
                </div>
              ))}
          </div>
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Based
        </a>
      </footer>
    </div>
  );
};

export default Home;
